<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.j2ee_bad_practices_non_serializable_object_stored_in_session -->						
							<h1>
							   J2EE Bad Practices: Non-Serializable Object Stored in Session
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Storing a non-serializable object as an <code>HttpSession</code> attribute can damage application reliability.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  A J2EE application can make use of multiple JVMs in order to improve application reliability and performance. In order to make the multiple JVMs appear as a single application to the end user, the J2EE container can replicate an <code>HttpSession</code> object across multiple JVMs so that if one JVM becomes unavailable another can step in and take its place without disrupting the flow of the application.<br><br>In order for session replication to work, the values the application stores as attributes in the session must implement the <code>Serializable</code> interface.<br><br><b>Example 1:</b> The following class adds itself to the session, but because it is not serializable, the session can no longer be replicated.<br><br></p>
<pre><br>public class DataGlob {<br>   String globName;<br>   String globValue;<br><br>   public void addToSession(HttpSession session) {<br>     session.setAttribute("glob", this);<br>   }<br>}<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>The Java Servlet Specification</em> Sun Microsystems<br></p>
																									   <p>[2]  <em>The java.io.Serializable Interface</em> Sun Microsystems<br></p>
																									   <p>[3]  <em>MSC08-J. Do not store non-serializable objects as attributes in an HTTP session</em> CERT<br></p>
																									   <p>[4] Standards Mapping - Common Weakness Enumeration <em>CWE ID 579</em> <br></p>
																									   <p>[5] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M1 Weak Server Side Controls</em> <br></p>
																									   <p>[6] Standards Mapping - OWASP Top 10 2004 <em>A3 Broken Authentication and Session Management</em> <br></p>
																									   <p>[7] Standards Mapping - OWASP Top 10 2007 <em>A7 Broken Authentication and Session Management</em> <br></p>
																									   <p>[8] Standards Mapping - OWASP Top 10 2010 <em>A3 Broken Authentication and Session Management</em> <br></p>
																									   <p>[9] Standards Mapping - OWASP Top 10 2013 <em>A2 Broken Authentication and Session Management</em> <br></p>
																									   <p>[10] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 <em>Requirement 6.5.3</em> <br></p>
																									   <p>[11] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 <em>Requirement 6.5.7</em> <br></p>
																									   <p>[12] Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 <em>Requirement 6.5.8</em> <br></p>
																									   <p>[13] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 6.5.10</em> <br></p>
																									   <p>[14] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 6.5.10</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.j2ee_bad_practices_non_serializable_object_stored_in_session
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
