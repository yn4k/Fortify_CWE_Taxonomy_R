<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.semantic.java.castor_bad_practices_unspecified_query_mode -->						
							<h1>
							   Castor Bad Practices: Unspecified Query Mode
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  The Castor query does not explicitly define a query mode.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  By default Castor executes queries in shared mode. Since shared mode allows both read and write access, it is unclear what kind of operation the query is intended for. If the object is going to be used in a read-only context, shared access adds unnecessary performance overhead.<br><br><b>Example 1:</b> The following example does not specify a query mode.<br></p>
<pre><br>results = query.execute();    //missing query mode<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] ExoLab Group <em>Castor JDO - Best practice</em> <br></p>
																									   <p>[2] ExoLab Group, Intalio Inc., and Contributors <em>Database (Castor JavaDoc)</em> <br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 265</em> <br></p>
																									   <p>[4] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 <em>Requirement 7.1.1</em> <br></p>
																									   <p>[5] Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 <em>Requirement 7.1.1</em> <br></p>
																									   <p>[6] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 7.1.2</em> <br></p>
																									   <p>[7] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 7.1.2</em> <br></p>
																									   <p>[8] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP3500 CAT II</em> <br></p>
																									   <p>[9] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP3500 CAT II</em> <br></p>
																									   <p>[10] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP3500 CAT II</em> <br></p>
																									   <p>[11] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP3500 CAT II</em> <br></p>
																									   <p>[12] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP3500 CAT II</em> <br></p>
																									   <p>[13] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP3500 CAT II</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.semantic.java.castor_bad_practices_unspecified_query_mode
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
