<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.dataflow.java.insecure_transport -->						
							<h1>
							   Insecure Transport
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  The call uses an unencrypted protocol instead of an encrypted protocol to communicate with the server.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  All communication over HTTP, FTP or gopher is unauthenticated and unencrypted. It is thus, subject to compromise, especially in the mobile environment where devices frequently connect to unsecured, public, wireless networks using WiFi connections.<br><br><b>Example 1:</b> The following example reads data using the HTTP protocol (versus using HTTPS).<br><br></p>
<pre><br><br>   URL url = new URL("http://www.android.com/");<br>   HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();<br>   try {<br>     InputStream in = new BufferedInputStream(urlConnection.getInputStream());<br>     readStream(in);<br>     ...<br>   }<br><br></pre>
<br><br>The incoming stream,<code>instream</code>, may have been compromised as it is delivered over an unencrypted and unauthenticated channel.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>Designing for Security</em> Android<br></p>
																									   <p>[2] S. Fahl, M. Harbach, T. Muders, M. Smith, L. Baumgartner, B. Friesleben <em>Why Eve and Mallory Love Android:An Analysis of Android SSL (In)Security</em> <br></p>
																									   <p>[3]  <em>OWASP Top 10 Mobile Risks</em> OWASP<br></p>
																									   <p>[4]  <em>MSC00-J. Use SSLSocket rather than Socket for secure data exchange</em> CERT<br></p>
																									   <p>[5]  <em>INPUT-1: Validate inputs</em> Oracle<br></p>
																									   <p>[6] Standards Mapping - Common Weakness Enumeration <em>CWE ID 311</em> <br></p>
																									   <p>[7] Standards Mapping - FIPS200 <em>CM, SC</em> <br></p>
																									   <p>[8] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>SC-8 Transmission Confidentiality and Integrity (P1)</em> <br></p>
																									   <p>[9] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M3 Insufficient Transport Layer Protection</em> <br></p>
																									   <p>[10] Standards Mapping - OWASP Top 10 2004 <em>A10 Insecure Configuration Management</em> <br></p>
																									   <p>[11] Standards Mapping - OWASP Top 10 2007 <em>A9 Insecure Communications</em> <br></p>
																									   <p>[12] Standards Mapping - OWASP Top 10 2010 <em>A9 Insufficient Transport Layer Protection</em> <br></p>
																									   <p>[13] Standards Mapping - OWASP Top 10 2013 <em>A6 Sensitive Data Exposure</em> <br></p>
																									   <p>[14] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 <em>Requirement 4.1, Requirement 6.5.10</em> <br></p>
																									   <p>[15] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 <em>Requirement 4.1, Requirement 6.3.1.4, Requirement 6.5.9</em> <br></p>
																									   <p>[16] Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 <em>Requirement 4.1, Requirement 6.5.4</em> <br></p>
																									   <p>[17] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 4.1, Requirement 6.5.4</em> <br></p>
																									   <p>[18] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 4.1, Requirement 6.5.4</em> <br></p>
																									   <p>[19] Standards Mapping - SANS Top 25 2009 <em>Insecure Interaction - CWE ID 319</em> <br></p>
																									   <p>[20] Standards Mapping - SANS Top 25 2010 <em>Porous Defenses - CWE ID 311</em> <br></p>
																									   <p>[21] Standards Mapping - SANS Top 25 2011 <em>Porous Defenses - CWE ID 311</em> <br></p>
																									   <p>[22] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II, APP3260.1 CAT II</em> <br></p>
																									   <p>[23] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II, APP3260 CAT II</em> <br></p>
																									   <p>[24] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II, APP3260 CAT II</em> <br></p>
																									   <p>[25] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II, APP3260 CAT II</em> <br></p>
																									   <p>[26] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II, APP3260 CAT II</em> <br></p>
																									   <p>[27] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II, APP3260 CAT II</em> <br></p>
																									   <p>[28] Standards Mapping - Web Application Security Consortium 24 + 2 <em>Information Leakage</em> <br></p>
																									   <p>[29] Standards Mapping - Web Application Security Consortium Version 2.00 <em>Insufficient Transport Layer Protection (WASC-04)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.dataflow.java.insecure_transport
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
