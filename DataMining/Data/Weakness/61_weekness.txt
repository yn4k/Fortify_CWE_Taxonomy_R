<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.dataflow.java.code_correctness_erroneous_class_compare -->						
							<h1>
							   Code Correctness: Erroneous Class Compare
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Determining an object's type based on its class name can lead to unexpected behavior or allow an attacker to inject a malicious class.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Attackers may deliberately duplicate class names in order to cause a program to execute malicious code. For this reason, class names are not good type identifiers and should not be used as the basis for granting trust to a given object.<br><br>Example 1: The following code opts to trust or distrust input from an <code>inputReader</code> object based on its class name. If an attacker is able to supply an implementation of <code>inputReader</code> that executes malicious commands, this code will be unable to differentiate the benign and malicious versions of the object.<br><br></p>
<pre><br>if (inputReader.getClass().getName().equals("TrustedName"))<br>{<br>   input = inputReader.getInput();<br>   ...<br>}<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>OBJ09-J. Compare classes and not class names</em> CERT<br></p>
																									   <p>[2]  <em>INPUT-1: Validate inputs</em> Oracle<br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 486</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.dataflow.java.code_correctness_erroneous_class_compare
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
