<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.dead_code_unused_method -->						
							<h1>
							   Dead Code: Unused Method
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  This method is not reachable from any method outside the class.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  This method is never called or is only called from other dead code.<br><br><b>Example 1:</b> In the following class, the method <code>doWork()</code> can never be called.<br><br></p>
<pre><br>public class Dead {<br>  private void doWork() {<br>    System.out.println("doing work");<br>  }<br>  public static void main(String[] args) {<br>    System.out.println("running Dead");<br>  }<br>}<br></pre>
<br><br><b>Example 2:</b> In the following class, two private methods call each other, but since neither one is ever invoked from anywhere else, they are both dead code.<br><br><pre><br>public class DoubleDead {<br>  private void doTweedledee() {<br>    doTweedledumb();<br>  }<br>  private void doTweedledumb() {<br>    doTweedledee();<br>  }<br>  public static void main(String[] args) {<br>    System.out.println("running DoubleDead");<br>  }<br>}<br></pre>
<br><br>(In this case it is a good thing that the methods are dead: invoking either one would cause an infinite loop.)
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] Standards Mapping - Common Weakness Enumeration <em>CWE ID 561</em> <br></p>
																									   <p>[2] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP3050 CAT II</em> <br></p>
																									   <p>[3] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP3050 CAT II</em> <br></p>
																									   <p>[4] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP3050 CAT II</em> <br></p>
																									   <p>[5] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP3050 CAT II</em> <br></p>
																									   <p>[6] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP3050 CAT II</em> <br></p>
																									   <p>[7] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP3050 CAT II</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.dead_code_unused_method
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
