<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.semantic.java.hidden_field -->						
							<h1>
							   Hidden Field
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  The program creates a hidden form field.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Programmers often trust the contents of hidden fields, expecting that users will not be able to view them or manipulate their contents. Attackers will violate these assumptions. They will examine the values written to hidden fields and alter them or replace the contents with attack data.<br><br><br><br><b>Example:</b><br></p>
<pre><br>  Hidden hidden = new Hidden(element);<br></pre>
<br><br>If hidden fields carry sensitive information, this information will be cached the same way the rest of the page is cached. This can lead to sensitive information being tucked away in the browser cache without the user's knowledge.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>Input Validation and Representation</em> Fortify, An HP Company<br></p>
																									   <p>[2]  <em>IDS14-J. Do not trust the contents of hidden form fields</em> CERT<br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 472, CWE ID 642</em> <br></p>
																									   <p>[4] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M4 Unintended Data Leakage</em> <br></p>
																									   <p>[5] Standards Mapping - SANS Top 25 2009 <em>Risky Resource Management - CWE ID 642</em> <br></p>
																									   <p>[6] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP3610 CAT I</em> <br></p>
																									   <p>[7] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP3610 CAT I</em> <br></p>
																									   <p>[8] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP3610 CAT I</em> <br></p>
																									   <p>[9] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP3610 CAT I</em> <br></p>
																									   <p>[10] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP3610 CAT I</em> <br></p>
																									   <p>[11] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP3610 CAT I</em> <br></p>
																									   <p>[12] Standards Mapping - Web Application Security Consortium 24 + 2 <em>Information Leakage</em> <br></p>
																									   <p>[13] Standards Mapping - Web Application Security Consortium Version 2.00 <em>Information Leakage (WASC-13)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.semantic.java.hidden_field
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
