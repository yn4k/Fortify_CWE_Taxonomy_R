<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.code_correctness_non_static_inner_class_implements_serializable -->						
							<h1>
							   Code Correctness: Non-Static Inner Class Implements Serializable
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Inner classes implementing <code>java.io.Serializable</code> may cause problems and leak information from the outer class.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Serialization of inner classes lead to serialization of the outer class, therefore possibly leaking information or leading to a runtime error if the outer class is not serializable. As well as this, serializing inner classes may cause platform dependencies since the Java compiler creates synthetic fields in order to implement inner classes, but these are implementation dependent, and may vary from compiler to compiler.<br><br><b>Example 1:</b> The following code allows serialization of an inner class.<br><br></p>
<pre><br>  ...<br>  class User implements Serializable {<br>    private int accessLevel;<br>    class Registrator implements Serializable {<br>      ...<br>    }<br>  }<br><br></pre>
<br><br>In the above example, when the inner class <code>Registrator</code> is serialized, it will also serialize the field <code>accessLevel</code> from the outer class <code>User</code>.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>SER05-J. Do not serialize instances of inner classes</em> CERT<br></p>
																									   <p>[2] Standards Mapping - Common Weakness Enumeration <em>CWE ID 398</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.code_correctness_non_static_inner_class_implements_serializable
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
