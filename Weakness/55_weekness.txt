<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.semantic.java.code_correctness_call_to_thread_stop -->						
							<h1>
							   Code Correctness: Call to Thread.stop()
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  The program calls a thread's <code>stop()</code> method, potentially leaking resources.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  In most cases a direct call to a <code>Thread</code> object's <code>stop()</code> method is a bug. The programmer intended to stop a thread from running, but was unaware that this is not a suitable way to stop a thread. The <code>stop()</code> function within <code>Thread</code> causes a <code>ThreadDeath</code> exception anywhere within the <code>Thread</code> object, likely leaving objects in an inconsistent state and potentially leaking resources. Due to this API being inherently unsafe, its use was deprecated long ago.<br><br><b>Example 1:</b> The following excerpt from a Java program mistakenly calls <code>Thread.stop()</code>.<br><br></p>
<pre><br>  ...<br>  public static void main(String[] args){<br>    ...<br>    Thread thr = new Thread() {<br>      public void run() {<br>        ...<br>      }<br>    };<br>    ...<br>    thr.start();<br>    ...<br>    thr.stop();<br>    ...<br>  }<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>THI05-J. Do not use Thread.stop() to terminate threads</em> CERT<br></p>
																									   <p>[2]  <em>Why are Thread.stop, Thread.suspend, Thread.resume and Runtime.runFinalizersOnExit Deprecated?</em> Oracle<br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 572</em> <br></p>
																									   <p>[4] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>SC-5 Denial of Service Protection (P1)</em> <br></p>
																									   <p>[5] Standards Mapping - OWASP Top 10 2004 <em>A9 Application Denial of Service</em> <br></p>
																									   <p>[6] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 <em>Requirement 6.5.9</em> <br></p>
																									   <p>[7] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP6080 CAT II</em> <br></p>
																									   <p>[8] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP6080 CAT II</em> <br></p>
																									   <p>[9] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP6080 CAT II</em> <br></p>
																									   <p>[10] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP6080 CAT II</em> <br></p>
																									   <p>[11] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP6080 CAT II</em> <br></p>
																									   <p>[12] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP6080 CAT II</em> <br></p>
																									   <p>[13] Standards Mapping - Web Application Security Consortium 24 + 2 <em>Denial of Service</em> <br></p>
																									   <p>[14] Standards Mapping - Web Application Security Consortium Version 2.00 <em>Denial of Service (WASC-10)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.semantic.java.code_correctness_call_to_thread_stop
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
