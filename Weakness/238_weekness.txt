<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.poor_error_handling_swallowed_threaddeath -->						
							<h1>
							   Poor Error Handling: Swallowed ThreadDeath
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  If a <code>ThreadDeath</code> error is not re-thrown, the thread in question might not actually die.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  <code>ThreadDeath</code> errors should only be caught if an applications needs to clean up after being terminated asynchronously. If a <code>ThreadDeath</code> error is caught, it is important that it be re-thrown so that the thread actually dies. The purpose of throwing <code>ThreadDeath</code> is to stop a thread. If <code>ThreadDeath</code> is swallowed, it can prevent a thread from stopping and result in unexpected behavior since whoever originally threw <code>ThreadDeath</code> expects the thread to stop.<br><br><b>Example 1:</b> The following code catches <code>ThreadDeath</code> but does not re-throw it.<br></p>
<pre><br>try<br>{<br>//some code<br>}<br>catch(ThreadDeath td)<br>{<br>//clean up code<br>}<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] Sun Microsystems, Inc. <em>Java Sun Tutorial</em> <br></p>
																									   <p>[2] Scott Oaks, Henry Wong <em>Java Threads</em> O'Reilly<br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 691</em> <br></p>
																									   <p>[4] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>SI-11 Error Handling (P2)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.poor_error_handling_swallowed_threaddeath
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
