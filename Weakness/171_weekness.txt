<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.config.java.flex_misconfiguration_debug_information -->						
							<h1>
							   Flex Misconfiguration: Debug Information
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Debugging information helps attackers learn about the system and plan a form of attack.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  If you are using Blaze DS to perform logging of any unexpected events, the <code>services-config.xml</code> descriptor file specifies a "Logging" XML element to describe various aspects of logging. It looks something like this:<br><br><b>Example:</b><br></p>
<pre><br>&lt;logging&gt;<br>    &lt;target class="flex.messaging.log.ConsoleTarget" level="Debug"&gt;<br>        &lt;properties&gt;<br>            &lt;prefix&gt;[BlazeDS]&lt;/prefix&gt;<br>            &lt;includeDate&gt;false&lt;/includeDate&gt;<br>            &lt;includeTime&gt;false&lt;/includeTime&gt;<br>            &lt;includeLevel&gt;false&lt;/includeLevel&gt;<br>            &lt;includeCategory&gt;false&lt;/includeCategory&gt;<br>        &lt;/properties&gt;<br>        &lt;filters&gt;<br>            &lt;pattern&gt;Endpoint.*&lt;/pattern&gt;<br>            &lt;pattern&gt;Service.*&lt;/pattern&gt;<br>            &lt;pattern&gt;Configuration&lt;/pattern&gt;<br>        &lt;/filters&gt;<br>    &lt;/target&gt;<br>&lt;/logging&gt;<br></pre>
<br><br>This <code>target</code> tag takes an optional attribute called <code>level</code>, which indicates the log level. If the debug level is set to too detailed a level, your application may write sensitive data to the log file.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] Standards Mapping - Common Weakness Enumeration <em>CWE ID 11</em> <br></p>
																									   <p>[2] Standards Mapping - FIPS200 <em>CM</em> <br></p>
																									   <p>[3] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>SI-11 Error Handling (P2)</em> <br></p>
																									   <p>[4] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M1 Weak Server Side Controls</em> <br></p>
																									   <p>[5] Standards Mapping - OWASP Top 10 2004 <em>A10 Insecure Configuration Management</em> <br></p>
																									   <p>[6] Standards Mapping - OWASP Top 10 2007 <em>A6 Information Leakage and Improper Error Handling</em> <br></p>
																									   <p>[7] Standards Mapping - OWASP Top 10 2010 <em>A6 Security Misconfiguration</em> <br></p>
																									   <p>[8] Standards Mapping - OWASP Top 10 2013 <em>A5 Security Misconfiguration</em> <br></p>
																									   <p>[9] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 <em>Requirement 6.5.10</em> <br></p>
																									   <p>[10] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 <em>Requirement 6.5.6</em> <br></p>
																									   <p>[11] Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 <em>Requirement 6.5.5</em> <br></p>
																									   <p>[12] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 6.5.5</em> <br></p>
																									   <p>[13] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 6.5.5</em> <br></p>
																									   <p>[14] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP3120 CAT II, APP3620 CAT II</em> <br></p>
																									   <p>[15] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP3120 CAT II, APP3620 CAT II</em> <br></p>
																									   <p>[16] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP3120 CAT II, APP3620 CAT II</em> <br></p>
																									   <p>[17] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP3120 CAT II, APP3620 CAT II</em> <br></p>
																									   <p>[18] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP3120 CAT II, APP3620 CAT II</em> <br></p>
																									   <p>[19] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP3120 CAT II, APP3620 CAT II</em> <br></p>
																									   <p>[20] Standards Mapping - Web Application Security Consortium 24 + 2 <em>Information Leakage</em> <br></p>
																									   <p>[21] Standards Mapping - Web Application Security Consortium Version 2.00 <em>Information Leakage (WASC-13)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.config.java.flex_misconfiguration_debug_information
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
