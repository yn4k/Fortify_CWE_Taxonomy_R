<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.poor_style_confusing_naming.class_and_member -->						
							<h1>
							   Poor Style: Confusing Naming(class_and_member)
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  A class member has the same name as the enclosing class.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Java allows class members to share the same name as the enclosing class, but taking advantage of this capability usually results in confusing and buggy code.<br><br><b>Example 1:</b> Consider the following class. Imagine trying to debug a problem with it.<br><br></p>
<pre><br>public class Name {<br><br>  private Name Name;<br><br>  public Name getName() {<br>    return Name.Name;<br>  }<br>}<br></pre>
<br><br><b>Example 2:</b> The following code excerpt from WebGoat demonstrates a bug that manifests itself as a confusing naming issue [1].<br><br><pre><br>public class CreateDB<br>{<br>	public void CreateDB() { }<br>	...<br>}<br></pre>
<br><br>The author intended to create a constructor for the <code>CreateDB</code> class, but inadvertently wrote in a return type (<code>void</code>) and created a regular method instead.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>The WebGoat Project</em> OWASP<br></p>
																									   <p>[2] Standards Mapping - Common Weakness Enumeration <em>CWE ID 398</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.poor_style_confusing_naming.class_and_member
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
