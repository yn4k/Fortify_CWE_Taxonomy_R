<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.config.java.android_bad_practices_missing_component_permission -->						
							<h1>
							   Android Bad Practices: Missing Component Permission
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  The program does not explicitly assign an access permission to this public component.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Any application can access public components that are not explicitly assigned an access permission in their manifest definition.<br><br>The default value of the <code>exported</code> attribute for the activity, receiver and service components in an Android application depends on the presence or absence of an <code>intent-filter</code>. Presence of an <code>intent-filter</code> implies, the component is intended for external use, thus setting the <code>exported</code> attribute to true. This component is now accessible to any other applications on the Android platform.<br><br><b>Example 1:</b> Below is an example of an Android activity with an <code>intent-filter</code> and no explicit access permission set.<br><br></p>
<pre> &lt;activity android:name=".AndroidActivity"/&gt; </pre>
<br><pre>   &lt;intent-filter android:label="activityName"/&gt; </pre>
<br><pre>    &lt;action android:name=".someFunAction"/&gt; </pre>
<br><pre>   &lt;/intent-filter&gt; </pre>
<br><pre>    ... </pre>
<br><pre> &lt;/activity&gt; </pre>
<br><br>This activity can be exploited by malicious applications.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] Standards Mapping - Common Weakness Enumeration <em>CWE ID 265</em> <br></p>
																									   <p>[2] Standards Mapping - Common Weakness Enumeration - (CWE) <em>CWE ID 265</em> <br></p>
																									   <p>[3] Standards Mapping - FIPS200 <em>AC</em> <br></p>
																									   <p>[4] Standards Mapping - FIPS200 - (FISMA) <em>AC</em> <br></p>
																									   <p>[5] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>AC-3 Access Enforcement (P1)</em> <br></p>
																									   <p>[6] Standards Mapping - OWASP Top 10 2004 <em>A2 Broken Access Control</em> <br></p>
																									   <p>[7] Standards Mapping - OWASP Top 10 2004 - (OWASP 2004) <em>A2 Broken Access Control</em> <br></p>
																									   <p>[8] Standards Mapping - OWASP Top 10 2010 - (OWASP 2010) <em>A6 Security Misconfiguration</em> <br></p>
																									   <p>[9] Jesse Burns <em>Developing Secure Mobile Applications for Android</em> <br></p>
																									   <p>[10] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 - (PCI 1.1) <em>Requirement 6.5.10</em> <br></p>
																									   <p>[11] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 - (PCI 1.2) <em>Requirement 7.1.1</em> <br></p>
																									   <p>[12] Standards Mapping - SANS Top 25 2009 - (SANS 2009) <em>Improper Access Control - CWE ID 285</em> <br></p>
																									   <p>[13]  <em>The AndroidManifest.xml File</em> <br></p>
																									   <p>[14] William Enck, Machigar Ongtang, and Patrick McDaniel <em>Understanding Android Security</em> <br></p>
																									   <p>[15] William Enck and Patrick McDaniel <em>Understanding Android's Security Framework</em> <br></p>
																									   <p>[16]  <em>Using Permissions</em> <br></p>
																									   <p>[17] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M5 Poor Authorization and Authentication</em> <br></p>
																									   <p>[18] Standards Mapping - OWASP Top 10 2010 <em>A6 Security Misconfiguration</em> <br></p>
																									   <p>[19] Standards Mapping - OWASP Top 10 2013 <em>A5 Security Misconfiguration</em> <br></p>
																									   <p>[20] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 <em>Requirement 6.5.10</em> <br></p>
																									   <p>[21] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 <em>Requirement 7.1.1</em> <br></p>
																									   <p>[22] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 7.1.2</em> <br></p>
																									   <p>[23] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 7.1.2</em> <br></p>
																									   <p>[24] Standards Mapping - SANS Top 25 2009 <em>Porous Defenses - CWE ID 285</em> <br></p>
																									   <p>[25] Standards Mapping - SANS Top 25 2010 <em>Porous Defenses - CWE ID 285</em> <br></p>
																									   <p>[26] Standards Mapping - Security Technical Implementation Guide Version 3.1 <em>APP3480.1 CAT II</em> <br></p>
																									   <p>[27] Standards Mapping - Security Technical Implementation Guide Version 3.4 <em>APP3480.1 CAT I</em> <br></p>
																									   <p>[28] Standards Mapping - Security Technical Implementation Guide Version 3.5 <em>APP3480.1 CAT I</em> <br></p>
																									   <p>[29] Standards Mapping - Security Technical Implementation Guide Version 3.6 <em>APP3480.1 CAT I</em> <br></p>
																									   <p>[30] Standards Mapping - Security Technical Implementation Guide Version 3.7 <em>APP3480.1 CAT I</em> <br></p>
																									   <p>[31] Standards Mapping - Security Technical Implementation Guide Version 3.9 <em>APP3480.1 CAT I</em> <br></p>
																									   <p>[32] Standards Mapping - Web Application Security Consortium Version 2.00 <em>Insufficient Authorization (WASC-02)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.config.java.android_bad_practices_missing_component_permission
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
