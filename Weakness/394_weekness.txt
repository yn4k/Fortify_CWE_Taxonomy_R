<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.privilege_management_missing_api_permission -->						
							<h1>
							   Privilege Management: Missing API Permission
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  The program attempts to perform an operation without requesting the required permission.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Certain Android operations require permissions.  Permissions have to be requested by the application at install time by listing them in the <code>AndroidManifest.xml</code> file via <code>&lt;uses-permission/&gt;</code> tags. If the required permissions are not requested, the operations that require these permissions will fail at runtime. In some cases, a <code>java.lang.SecurityException</code> is thrown back to the application. Other times, operations fail silently without an exception.<br><br><b>Example 1:</b> The following code sends a text based SMS.<br><br></p>
<pre>sms.sendTextMessage(recipient, null, message, PendingIntent.getBroadcast(SmsMessaging.this, 0, new Intent(ACTION_SMS_SENT), 0), null);</pre>
<br><br>This API requires the <code>android.permission.SEND_SMS</code> permission. If this permission is not requested by the application in the manifest file, the application will fail to send an SMS.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>Using Permissions</em> <br></p>
																									   <p>[2] A. P. Felt, E. Chin, S. Hanna, D. Song, and D. Wagner <em>Android Permissions Demystified</em> <br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 265</em> <br></p>
																									   <p>[4] Standards Mapping - FIPS200 <em>AC</em> <br></p>
																									   <p>[5] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>AC-3 Access Enforcement (P1)</em> <br></p>
																									   <p>[6] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M5 Poor Authorization and Authentication</em> <br></p>
																									   <p>[7] Standards Mapping - OWASP Top 10 2004 <em>A2 Broken Access Control</em> <br></p>
																									   <p>[8] Standards Mapping - OWASP Top 10 2010 <em>A6 Security Misconfiguration</em> <br></p>
																									   <p>[9] Standards Mapping - OWASP Top 10 2013 <em>A5 Security Misconfiguration</em> <br></p>
																									   <p>[10] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 <em>Requirement 6.5.10</em> <br></p>
																									   <p>[11] Standards Mapping - Payment Card Industry Data Security Standard Version 1.2 <em>Requirement 7.1.1</em> <br></p>
																									   <p>[12] Standards Mapping - Payment Card Industry Data Security Standard Version 2.0 <em>Requirement 7.1.1</em> <br></p>
																									   <p>[13] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 7.1.2</em> <br></p>
																									   <p>[14] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 7.1.2</em> <br></p>
																									   <p>[15] Standards Mapping - SANS Top 25 2009 <em>Porous Defenses - CWE ID 285</em> <br></p>
																									   <p>[16] Standards Mapping - SANS Top 25 2010 <em>Porous Defenses - CWE ID 285</em> <br></p>
																									   <p>[17] Standards Mapping - Web Application Security Consortium 24 + 2 <em>Insufficient Authorization</em> <br></p>
																									   <p>[18] Standards Mapping - Web Application Security Consortium Version 2.00 <em>Insufficient Authorization (WASC-02)</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.privilege_management_missing_api_permission
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
