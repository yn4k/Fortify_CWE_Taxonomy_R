<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.code_correctness_incorrect_serialpersistentfields_modifier -->						
							<h1>
							   Code Correctness: Incorrect serialPersistentFields Modifier
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  To use <code>serialPersistentFields</code> correctly, it must be declared <code>private</code>, <code>static</code>, and <code>final</code>.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  The Java Object Serialization Specification allows developers to manually define Serializable fields for a class by specifying them in the <code>serialPersistentFields</code> array. This feature will only work if <code>serialPersistentFields</code> is declared as <code>private</code>, <code>static</code>, and <code>final</code>.<br><br><b>Example 1: </b> The following declaration of <code>serialPersistentFields</code> will not be used to define <code>Serializable</code> fields because it is not <code>private</code>, <code>static</code>, and <code>final</code>.<br></p>
<pre><br>class List implements Serializable {<br>public ObjectStreamField[] serialPersistentFields = { new ObjectStreamField("myField", List.class) };<br>...<br>}<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] Sun Microsystems, Inc. <em>Java Sun Tutorial</em> <br></p>
																									   <p>[2]  <em>SERIAL-2: Guard sensitive data during serialization</em> Oracle<br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 485</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.code_correctness_incorrect_serialpersistentfields_modifier
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
