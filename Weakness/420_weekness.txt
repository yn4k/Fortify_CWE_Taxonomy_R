<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.code_correctness_double_checked_locking -->						
							<h1>
							   Code Correctness: Double-Checked Locking
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Double-checked locking is an incorrect idiom that does not achieve the intended effect.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  Many talented individuals have spent a great deal of time pondering ways to make double-checked locking work in order to improve performance. None have succeeded.<br><br><b>Example 1:</b> At first blush it may seem that the following bit of code achieves thread safety while avoiding unnecessary synchronization.<br><br></p>
<pre><br>if (fitz == null) {<br>  synchronized (this) {<br>    if (fitz == null) {<br>      fitz = new Fitzer();<br>    }<br>  }<br>}<br>return fitz;<br></pre>
<br><br>The programmer wants to guarantee that only one <code>Fitzer()</code> object is ever allocated, but does not want to pay the cost of synchronization every time this code is called. This idiom is known as double-checked locking.<br><br>Unfortunately, it does not work, and multiple <code>Fitzer()</code> objects can be allocated. See The "Double-Checked Locking is Broken" Declaration for more details [1].
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] D. Bacon et al. <em>The "Double-Checked Locking is Broken" Declaration</em> <br></p>
																									   <p>[2]  <em>LCK10-J. Use a correct form of the double-checked locking idiom</em> CERT<br></p>
																									   <p>[3] Standards Mapping - Common Weakness Enumeration <em>CWE ID 609</em> <br></p>
																									   <p>[4] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 6.5.6</em> <br></p>
																									   <p>[5] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 6.5.6</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.code_correctness_double_checked_locking
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
