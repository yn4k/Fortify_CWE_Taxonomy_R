<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.weak_securitymanager_check_overridable_method -->						
							<h1>
							   Weak SecurityManager Check: Overridable Method
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Non-final methods that perform security checks can be overridden in ways that bypass security checks.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  If a method is overridden by a child class, the child class can bypass security checks in the parent class.<br><b>Example 1:</b> In the following code, <code>doSecurityCheck()</code> performs a security check and can be overridden by a child class.<br></p>
<pre><br>public class BadSecurityCheck {<br>private int id;<br><br>public BadSecurityCheck() {<br>    doSecurityCheck();<br>    id = 1;<br>}<br>protected void doSecurityCheck() {<br>    SecurityManager sm = System.getSecurityManager();<br>    if (sm != null) {<br>        sm.checkPermission(new SomePermission("SomeAction"));<br>    }<br>}<br>}<br></pre>
							
							 								<h2>REFERENCES</h2>
																								   <p>[1]  <em>M. S. Ware, "Writing secure Java code: taxonomy of heuristics and an evaluation of static analysis tools," M.S. Thesis, James Madison University, 2008.</em> <br></p>
																									   <p>[2]  <em>MET03-J. Methods that perform a security check must be declared private or final</em> CERT<br></p>
																									   <p>[3]  <em>EXTEND-5: Limit the extensibility of classes and methods</em> Oracle<br></p>
																									   <p>[4] Standards Mapping - Common Weakness Enumeration <em>CWE ID 358</em> <br></p>
																									   <p>[5] Standards Mapping - FIPS200 <em>MP</em> <br></p>
																									   <p>[6] Standards Mapping - NIST Special Publication 800-53 Revision 4 <em>AC-3 Access Enforcement (P1)</em> <br></p>
																									   <p>[7] Standards Mapping - OWASP Mobile Top 10 Risks 2014 <em>M5 Poor Authorization and Authentication</em> <br></p>
																									   <p>[8] Standards Mapping - OWASP Top 10 2013 <em>A7 Missing Function Level Access Control</em> <br></p>
																									   <p>[9] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 <em>Requirement 6.5.6</em> <br></p>
																									   <p>[10] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 <em>Requirement 6.5.6</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.weak_securitymanager_check_overridable_method
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
