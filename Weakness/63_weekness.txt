<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>Software Security | Protect your Software at the Source | HPE Security Fortify</title>
<link rel="stylesheet" href="../css/vcmain.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<script language="javascript">

					if (top.location == self.location)
					{ //if page is not in its frameset
					//top.location.href = "/vulncat/index.html?open=" + window.location.href;
					}

				</script><!-- End of document.header.tile --><body class="level3"><div id="theWrapper">
						<div id="theContentCenter">
							<!-- desc.structural.java.code_correctness_erroneous_string_compare -->						
							<h1>
							   Code Correctness: Erroneous String Compare
							</h1>
							<h2>ABSTRACT</h2>
							<p>
							  Strings should be compared with the <code>equals()</code> method, not <code>==</code> or <code>!=</code>.
							</p>
							<h2>EXPLANATION</h2>
							<p>
							  This program uses <code>==</code> or <code>!=</code> to compare two strings for equality, which compares two objects for equality, not their values. Chances are good that the two references will never be equal.<br><br><b>Example 1:</b> The following branch will never be taken.<br><br></p>
<pre><br>  if (args[0] == STRING_CONSTANT) {<br>      logger.info("miracle");<br>  }<br></pre>
<br><br>The <code>==</code> and <code>!=</code> operators will only behave as expected when they are used to compare strings contained in objects that are equal. The most common way for this to occur is for the strings to be interned, whereby the strings are added to a pool of objects maintained by the <code>String</code> class. Once a string is interned, all uses of that string will use the same object and equality operators will behave as expected. All string literals and string-valued constants are interned automatically. Other strings can be interned manually be calling <code>String.intern()</code>, which will return a canonical instance of the current string, creating one if necessary.
							
							 								<h2>REFERENCES</h2>
																								   <p>[1] Standards Mapping - Common Weakness Enumeration <em>CWE ID 597</em> <br></p>
																														<div id="theFooter">
							<p></p>
							<br><center>
                                                        Â© Copyright 2008 - 2015 Hewlett Packard Enterprise Development Company, L.P.
							<br>
							(Generated from version 2015.4.0.0008 of the HPE Security Fortify Secure Coding Rulepacks)
							<br>
							desc.structural.java.code_correctness_erroneous_string_compare
							</center>
							<p></p>
						</div>
</div>
</div></body>
</html>
 
